name: MATLAB Code Analysis

on: 
  push:
    branches:
      - master  # Adjust as necessary
  pull_request:
    branches:
      - master  # Adjust as necessary



jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Octave
        run: sudo apt-get install -y octave

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install sarif-om

      - name: Run Octave Analysis
        run: |
          export DISPLAY=""
          cd .github/custom-queries/matlab  # Change to the directory containing the script
          octave --no-gui analyze_code.m

      - name: Convert results to SARIF
        run: |
          python3 -c "
          import json
          import sarif_om as sarif

          # Load the JSON results from the analysis
          with open('.github/custom-queries/matlab/code-analysis-results.json') as f:
              issues = json.load(f)

          # Build SARIF runs from the loaded issues
          runs = [
              sarif.Run(
                  tool=sarif.Tool(name='Octave Analysis'),
                  results=[
                      sarif.Result(
                          ruleId=issue[1][i]['ruleId'],  # Use single quotes for consistency
                          message=sarif.Message(text=issue[1][i]['message']),
                          locations=[sarif.Location(
                              physicalLocation=sarif.PhysicalLocation(
                                  artifactLocation=sarif.ArtifactLocation(uri=issue[0])
                              )
                          )]
                      ) for i in range(len(issue[1]))
                  ]
              ) for issue in issues
          ]

          # Create a SARIF log
          sarif_log = sarif.SarifLog(runs=runs)  # Removed schemaVersion here

          # Write the SARIF log to a file
          with open('.github/custom-queries/matlab/code-analysis-results.sarif', 'w') as sarif_file:
              sarif_file.write(sarif_log.json(exclude_none=True, schema_version='2.1.0'))  # Specify schema_version here
          "

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: '.github/custom-queries/matlab/code-analysis-results.sarif'
