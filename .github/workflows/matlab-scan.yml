name: "MATLAB Code Scanning and CodeQL Analysis"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '0 0 * * 1'

jobs:
  analyze:
    name: Analyze MATLAB Code
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Octave
      run: |
        sudo apt-get update
        sudo apt-get install -y octave

    - name: Run static code analysis
      run: |
        echo "addpath('code'); files = dir('code/**/*.m'); results = {}; for k = 1:length(files), filePath = fullfile(files(k).folder, files(k).name); fid = fopen(filePath, 'r'); code = fread(fid, '*char')'; fclose(fid); issues = codeAnalysis(code); if ~isempty(issues), results{end+1} = {filePath, issues}; end; end; save('code-analysis-results.m', 'results');" > analyze_code.m
        octave --no-gui analyze_code.m

    - name: Convert results to text
      run: |
        octave --no-gui --eval "load('code-analysis-results.m'); fid = fopen('code-analysis-results.txt', 'w'); for i = 1:length(results), fprintf(fid, 'File: %s\n', results{i}{1}); fprintf(fid, '%s\n', results{i}{2}{:}); end; fclose(fid);"

    - name: Upload static analysis results
      uses: actions/upload-artifact@v3
      with:
        name: static-code-analysis-results
        path: code-analysis-results.txt

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: 'javascript'  # Specify the language you want to analyze

    - name: Create CodeQL Database
      uses: github/codeql-action/autobuild@v2
      with:
        languages: 'javascript'

    - name: Run Custom CodeQL Queries
      uses: github/codeql-action/analyze@v2
      with:
        category: 'security'
        queries: /.github/custom-queries/matlab/*.ql

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
