name: "Octave Static Code Analysis for MATLAB"
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:  # Allows manual trigger from the Actions tab

jobs:
  analyze:
    name: Analyze MATLAB Code with Octave
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install Octave
      - name: Install Octave
        run: |
          sudo apt-get update
          sudo apt-get install -y octave

      # Step 3: Check for .m files in the repository
      - name: Find .m files
        id: find_files
        run: |
          m_files=$(find . -name "*.m")
          if [ -z "$m_files" ]; then
            echo "No .m files found!"
            exit 1
          else
            echo "$m_files"
          fi

      # Step 4: Create MATLAB analysis script in the correct location
      - name: Create MATLAB analysis script
        run: |
          echo "% Add current directory and subdirectories to path" > .github/custom-queries/matlab/analyze_code.m
          # ... (rest of the code)

      # Step 5: Run the static code analysis using Octave
      - name: Run MATLAB code analysis with Octave
        run: |
          octave --no-gui .github/custom-queries/matlab/analyze_code.m

      # Step 6: Install json2csv (if not already installed)
      - name: Install json2csv package
        run: |
          npm install -g json2csv

      # Step 7: Convert JSON to CSV
      - name: Convert JSON to CSV
        run: |
          json2csv code-analysis-results.json code-analysis-results.csv

      # ... (rest of your steps for SARIF conversion and upload)
