name: "Octave Static Code Analysis for MATLAB"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:  # Allows manual trigger from the Actions tab

jobs:
  analyze:
    name: Analyze MATLAB Code with Octave
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install Octave
      - name: Install Octave
        run: |
          sudo apt-get update
          sudo apt-get install -y octave

      # Step 3: Find and log all .m files
      - name: Find .m files
        run: |
          echo "Searching for .m files in the repository..."
          find . -name "*.m" || {
            echo "No .m files found!"
            exit 1
          }

      # Step 4: Create the analysis script for Octave
      - name: Create MATLAB analysis script
        run: |
          echo "addpath(genpath(pwd)); \
          files = dir('**/*.m'); \
          results = {}; \
          if isempty(files), disp('No MATLAB files found.'); exit; end; \
          for k = 1:length(files), \
            filePath = fullfile(files(k).folder, files(k).name); \
            fid = fopen(filePath, 'r'); \
            code = fread(fid, '*char')'; \
            fclose(fid); \
            issues = {}; \
            % Perform your custom analysis here and populate 'issues' \
            if ~isempty(issues), results{end+1} = {filePath, issues}; end; \
          end; \
          save('code-analysis-results.mat', 'results');" > analyze_code.m

      # Step 5: Run the analysis script using Octave
      - name: Run static code analysis
        run: |
          octave --no-gui analyze_code.m

      # Step 6: Check if results file was created
      - name: Check for results file
        run: |
          if [ ! -f code-analysis-results.mat ]; then
            echo "Results file not found!"
            exit 1
          fi

      # Step 7: Upload results
      - name: Upload output logs
        uses: actions/upload-artifact@v3
        with:
          name: octave-output
          path: output/octave_output.log
